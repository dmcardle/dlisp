;;;;
;;;; The DLISP standard library.
;;;;

;;; Primitive logic functions.

(def not    (quote (quote p) (cond p nil true)))
(def and    (quote (quote p q) (cond p q p)))
(def or     (quote (quote a b) (cond a a b)))

;;; Second-order logic functions.

; A casting function from truthy values to `nil` or `false`.
(def bool   (quote (quote p) (not (not p))))

;;; Numerical functions.

; Multiplication of positive integers.
(def mul (quote '(a b) (cond (sub a 1) (add b (mul (sub a 1) b)) b)))

; Factorial of positive integers.
(def fact '( '(n) (cond (not n) 1 (mul n (fact (sub n 1))))))
